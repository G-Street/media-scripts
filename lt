#! /usr/local/bin/bash

# ensure you run:
# `pkg install bash python3 ffmpeg parallel`


#MEDIA_DIR="/mnt/Primary/Media"
LT_DIR="/mnt/Media/Series/Looney Tunes/"
MEDIA_DIR="/mnt/Media/"
LOGFILE="${MEDIA_DIR}/Scripts/lt-conversion.log"
TEMPFILE="${MEDIA_DIR}/Scripts/scriptlets/temp.d/avifiles"


source "${MEDIA_DIR}/Scripts/scriptlets/helpCommands"
source "${MEDIA_DIR}/Scripts/scriptlets/optionErrors"
source "${MEDIA_DIR}/Scripts/scriptlets/jsonColourParser"


display_help() {
    help_start 'lt [-h]' 'The present script will find all avi files in the Looney Tunes directory, and traverse them, converting them.  For some reason, the normal script was not working for this task...'
    help_help '2'
}


main() {
    
    start=$(python3 -c 'import time; print(time.time())')

    truncate -s0 "${LOGFILE}"
    truncate -s0 "${TEMPFILE}"

    echo "++++++ Starting conversions of Looney Tunes' AVI files at $(date) ++++++" >> "${LOGFILE}"
    
    find "${LT_DIR}" -type f -iname \*.avi | \
    {
        parallel --quote --keep-order --max-procs 1 ffmpeg -y -i "{}" -strict -2 "${LT_DIR}"{/.}-reformatted.mp4 2>> "${LOGFILE}"
    }
    
    end=$(python3 -c 'import time; print(time.time())')
    runtime=$(echo "( $end - $start ) / 60" | bc -l )

    echo "++++++ Finished conversions in $runtime minutes at $(date) ++++++" >> "${LOGFILE}"
    
}


OPTIND=1
while getopts ":-:h" OPTION; do
        case $OPTION in
                -)
                    case $OPTARG in
                        help)
                            display_help ;;
                        *)
                            opt_err ;;
                    esac ;;
                h)
                    display_help ;;
                *)
                    opt_err ;;
        esac
done


if [[ "${1}" =~ ^\-.+ ]] # checks to see if first argument begins with a minus (i.e., is an option) as we cannot assess $OPTIND before options are called
then
    :
else
    main
fi
